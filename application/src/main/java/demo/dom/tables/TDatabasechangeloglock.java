/**
 * This class is generated by jOOQ
 */
package demo.dom.tables;


import demo.dom.Keys;
import demo.dom.TPublic;
import demo.dom.tables.records.RDatabasechangeloglockRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDatabasechangeloglock extends TableImpl<demo.dom.tables.records.RDatabasechangeloglockRecord> {

	private static final long serialVersionUID = -2040930004;

	/**
	 * The reference instance of <code>PUBLIC.DATABASECHANGELOGLOCK</code>
	 */
	public static final TDatabasechangeloglock DATABASECHANGELOGLOCK = new TDatabasechangeloglock();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<demo.dom.tables.records.RDatabasechangeloglockRecord> getRecordType() {
		return demo.dom.tables.records.RDatabasechangeloglockRecord.class;
	}

	/**
	 * The column <code>PUBLIC.DATABASECHANGELOGLOCK.ID</code>.
	 */
	public final TableField<demo.dom.tables.records.RDatabasechangeloglockRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DATABASECHANGELOGLOCK.LOCKED</code>.
	 */
	public final TableField<demo.dom.tables.records.RDatabasechangeloglockRecord, Boolean> LOCKED = createField("LOCKED", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DATABASECHANGELOGLOCK.LOCKGRANTED</code>.
	 */
	public final TableField<demo.dom.tables.records.RDatabasechangeloglockRecord, Timestamp> LOCKGRANTED = createField("LOCKGRANTED", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>PUBLIC.DATABASECHANGELOGLOCK.LOCKEDBY</code>.
	 */
	public final TableField<demo.dom.tables.records.RDatabasechangeloglockRecord, String> LOCKEDBY = createField("LOCKEDBY", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>PUBLIC.DATABASECHANGELOGLOCK</code> table reference
	 */
	public TDatabasechangeloglock() {
		this("DATABASECHANGELOGLOCK", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.DATABASECHANGELOGLOCK</code> table reference
	 */
	public TDatabasechangeloglock(String alias) {
		this(alias, DATABASECHANGELOGLOCK);
	}

	private TDatabasechangeloglock(String alias, Table<demo.dom.tables.records.RDatabasechangeloglockRecord> aliased) {
		this(alias, aliased, null);
	}

	private TDatabasechangeloglock(String alias, Table<demo.dom.tables.records.RDatabasechangeloglockRecord> aliased, Field<?>[] parameters) {
		super(alias, demo.dom.TPublic.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<demo.dom.tables.records.RDatabasechangeloglockRecord> getPrimaryKey() {
		return demo.dom.Keys.PK_DATABASECHANGELOGLOCK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<demo.dom.tables.records.RDatabasechangeloglockRecord>> getKeys() {
		return Arrays.<UniqueKey<demo.dom.tables.records.RDatabasechangeloglockRecord>>asList(demo.dom.Keys.PK_DATABASECHANGELOGLOCK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatabasechangeloglock as(String alias) {
		return new TDatabasechangeloglock(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TDatabasechangeloglock rename(String name) {
		return new TDatabasechangeloglock(name, null);
	}
}
